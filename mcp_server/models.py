# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T04:11:50+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, List, Optional

from pydantic import AnyUrl, BaseModel, ConfigDict, Field, RootModel, constr


class ApiCredentials(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    key: Optional[str] = None
    serial: Optional[str] = None


class ApiKey(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    key: Optional[str] = None


class CountOf(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None


class CurrentKey(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    current: Optional[bool] = None


class Expiry(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    expires: Optional[datetime] = None
    time: Optional[str] = None


class FindCredentials(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    key: Optional[str] = None
    serial: Optional[str] = None


class KeyView(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    action: constr(min_length=1)
    callbackOnModify: bool = Field(..., title='Callback On Modified')
    callbackUrl: Optional[AnyUrl] = Field(None, title='Callback Url')
    commenced: datetime = Field(..., title='Start From')
    created: Optional[datetime] = None
    current: Optional[bool] = None
    custom: Optional[Any] = None
    frequency: constr(min_length=1)
    name: Optional[constr(min_length=0, max_length=80)] = None
    serial: Optional[str] = None
    updated: Optional[datetime] = None


class ProductCreateModify(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    custom: Optional[Any] = None
    key: Optional[str] = None
    name: Optional[str] = None
    serial: Optional[str] = None


class SubscriptionCreateModify(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    action: constr(min_length=1)
    callbackOnModify: Optional[bool] = None
    callbackUrl: Optional[AnyUrl] = Field(None, title='Callback Url')
    custom: Optional[Any] = None
    frequency: constr(min_length=1)
    key: Optional[str] = None
    name: Optional[constr(min_length=0, max_length=80)] = None
    serial: Optional[str] = None
    startFrom: Optional[str] = None


class SubscriptionView(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    action: constr(min_length=1)
    callbackOnModify: bool = Field(..., title='Callback On Modified')
    callbackUrl: Optional[AnyUrl] = Field(None, title='Callback Url')
    commenced: datetime = Field(..., title='Start From')
    created: Optional[datetime] = None
    custom: Optional[Any] = None
    frequency: constr(min_length=1)
    keys: Optional[List[KeyView]] = None
    name: Optional[constr(min_length=0, max_length=80)] = None
    updated: Optional[datetime] = None


class V1KeysApiCurrentSerialGetResponse(RootModel[Optional[CurrentKey]]):
    root: Optional[CurrentKey] = None


class V1KeysApiExpirySerialGetResponse(RootModel[Optional[Expiry]]):
    root: Optional[Expiry] = None


class V1KeysApiFindSerialGetResponse(RootModel[Optional[KeyView]]):
    root: Optional[KeyView] = None


class V1ProductsApiPatchRequest(RootModel[Optional[ProductCreateModify]]):
    root: Optional[ProductCreateModify] = None


class V1ProductsApiPostRequest(RootModel[Optional[ProductCreateModify]]):
    root: Optional[ProductCreateModify] = None


class V1ProductsApiCountPostRequest(RootModel[Optional[ApiKey]]):
    root: Optional[ApiKey] = None


class V1ProductsApiCountPostResponse(RootModel[Optional[CountOf]]):
    root: Optional[CountOf] = None


class V1ProductsApiFindPostRequest(RootModel[Optional[FindCredentials]]):
    root: Optional[FindCredentials] = None


class V1ProductsApiListPostRequest(RootModel[Optional[ApiKey]]):
    root: Optional[ApiKey] = None


class V1ProductsApiSavePostRequest(RootModel[Optional[ProductCreateModify]]):
    root: Optional[ProductCreateModify] = None


class V1SubscriptionsApiPostRequest(RootModel[Optional[SubscriptionCreateModify]]):
    root: Optional[SubscriptionCreateModify] = None


class V1SubscriptionsApiPutRequest(RootModel[Optional[SubscriptionCreateModify]]):
    root: Optional[SubscriptionCreateModify] = None


class V1SubscriptionsApiCountPostRequest(RootModel[Optional[ApiCredentials]]):
    root: Optional[ApiCredentials] = None


class V1SubscriptionsApiCountPostResponse(RootModel[Optional[CountOf]]):
    root: Optional[CountOf] = None


class V1SubscriptionsApiDisablePatchRequest(RootModel[Optional[FindCredentials]]):
    root: Optional[FindCredentials] = None


class V1SubscriptionsApiDisablePostRequest(RootModel[Optional[FindCredentials]]):
    root: Optional[FindCredentials] = None


class V1SubscriptionsApiEnablePatchRequest(RootModel[Optional[FindCredentials]]):
    root: Optional[FindCredentials] = None


class V1SubscriptionsApiEnablePostRequest(RootModel[Optional[FindCredentials]]):
    root: Optional[FindCredentials] = None


class V1SubscriptionsApiFindPostRequest(RootModel[Optional[FindCredentials]]):
    root: Optional[FindCredentials] = None


class V1SubscriptionsApiFindPostResponse(RootModel[Optional[SubscriptionView]]):
    root: Optional[SubscriptionView] = None


class V1SubscriptionsApiListPostRequest(RootModel[Optional[FindCredentials]]):
    root: Optional[FindCredentials] = None


class V1SubscriptionsApiListPostResponse(RootModel[Optional[List[SubscriptionView]]]):
    root: Optional[List[SubscriptionView]] = None


class V1SubscriptionsApiSavePostRequest(RootModel[Optional[SubscriptionCreateModify]]):
    root: Optional[SubscriptionCreateModify] = None


class V1SubscriptionsApiSavePostResponse(RootModel[Optional[KeyView]]):
    root: Optional[KeyView] = None


class ProductView(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    created: Optional[datetime] = None
    custom: Optional[Any] = None
    name: Optional[constr(min_length=0, max_length=80)] = None
    serial: Optional[str] = None
    subscriptions: Optional[List[SubscriptionView]] = None
    updated: Optional[datetime] = None


class V1ProductsApiFindPostResponse(RootModel[Optional[ProductView]]):
    root: Optional[ProductView] = None


class V1ProductsApiListPostResponse(RootModel[Optional[List[ProductView]]]):
    root: Optional[List[ProductView]] = None


class V1ProductsApiSavePostResponse(RootModel[Optional[ProductView]]):
    root: Optional[ProductView] = None
